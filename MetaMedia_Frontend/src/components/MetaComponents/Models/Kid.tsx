/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/Models/kid.glb 
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export function KidModel({selectedImote}:any,props:any) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('../../../Models/kid.glb')
  const { actions,names } = useAnimations(animations, group)
  const currentAction = useRef<any>(null);
  
  useEffect(() => {
   
    const findIndex: number = names.findIndex((item: any) => item === selectedImote);
    if (findIndex !== -1) {
      if (currentAction.current) {
        currentAction.current.stop(); // Stop the currently playing animation
      }
      currentAction.current = actions[names[findIndex]]; // Update the current action
      currentAction.current.reset().fadeIn(0.5).play(); // Play the new animation
    }
  }, [selectedImote]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature002" rotation={[Math.PI / 2, 0, 5.5]} position={[0,-1.3,0]} scale={0.013}>
          <primitive object={nodes.mixamorig1Hips} />
          <skinnedMesh name="Ch29" geometry={nodes.Ch29.geometry} material={materials.Ch29_Body} skeleton={nodes.Ch29.skeleton} />
        </group>
      </group>
    </group>
  )
}

export default KidModel
useGLTF.preload('../../../Models/kid.glb')
